local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "CrownCheats - (Driving Empire Script)",
    SubTitle = "By ashy1828, monstraa",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "archive-restore" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options
local AutoFarm = false
local AutoFarmRunning = false
local TouchTheRoad = false
local FarmSpeed = 600 -- Default farm speed
local RemoveSpeedCap = false
local VehicleSpeedMultiplier = 1

-- Player & Utility
local LocalPlayer = game:GetService("Players").LocalPlayer
local VirtualUser = game:GetService("VirtualUser")
local Camera = workspace.CurrentCamera

local function GetCurrentVehicle()
    return LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character.Humanoid.SeatPart and LocalPlayer.Character.Humanoid.SeatPart.Parent
end

local function TP(cframe)
    local car = GetCurrentVehicle()
    if car and car.PrimaryPart then
        car:SetPrimaryPartCFrame(cframe)
    end
end

-- ‚úÖ New VelocityTP (car now faces destination properly)
local function VelocityTP(targetCFrame)
    local car = GetCurrentVehicle()
    if not car or not car.PrimaryPart then return end

    local direction = (targetCFrame.Position - car.PrimaryPart.Position).Unit
    local newCFrame = CFrame.new(car.PrimaryPart.Position, car.PrimaryPart.Position + direction)
    car:SetPrimaryPartCFrame(newCFrame)

    local bg = Instance.new("BodyGyro", car.PrimaryPart)
    bg.P = 5000
    bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.CFrame = newCFrame

    local bv = Instance.new("BodyVelocity", car.PrimaryPart)
    bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bv.Velocity = direction * FarmSpeed

    local travelTime = (car.PrimaryPart.Position - targetCFrame.Position).Magnitude / FarmSpeed
    wait(travelTime)

    bv:Destroy()
    bg:Destroy()
end

-- Coordinates for farming route
local StartPosition = CFrame.new(Vector3.new(4940.19775, 66.0195084, -1933.99927))
local EndPosition = CFrame.new(Vector3.new(1827.3407, 66.0150146, -658.946655))

-- Coroutine for farm loop
local AutoFarmFunc = coroutine.create(function()
    while true do
        wait()
        if not AutoFarm then
            AutoFarmRunning = false
            coroutine.yield()
        end
        AutoFarmRunning = true

        pcall(function()
            if GetCurrentVehicle() then
                TP(StartPosition)
                VelocityTP(EndPosition)
                TP(EndPosition)
                VelocityTP(StartPosition)
            end
        end)
    end
end)

-- Anti-AFK
LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new(), Camera.CFrame)
end)

-- UI Setup
Fluent:Notify({
    Title = "Notification",
    Content = "üëë CrownCheats üëë",
    SubContent = "Driving Empire",
    Duration = 5
})

Tabs.Main:AddParagraph({
    Title = "Welcome to The Driving Empire Script‚ùó",
    Content = "By ashy1828, And a Tiny Bit of monstraa"
})

-- üåü Auto Farm Toggle (Section renamed)
Tabs.Main:AddSection("Auto Farm Options")
Tabs.Main:AddToggle("AutoFarmToggle", {
    Title = "Auto Farm",
    Default = false
}):OnChanged(function(val)
    AutoFarm = val
    if val and not AutoFarmRunning then
        coroutine.resume(AutoFarmFunc)
    end
end)

-- Farm Speed Slider (placed under Auto Farm)
Tabs.Main:AddSlider("SpeedSlider", {
    Title = "Farm Speed",
    Description = "Adjust Auto Farm Speed",
    Default = 600,
    Min = 100,
    Max = 800,
    Rounding = 0,
    Callback = function(val)
        FarmSpeed = val
    end
})

-- Road Touch Toggle (optional)
Tabs.Main:AddToggle("TouchTheRoad", {
    Title = "Touch The Road (Optional)",
    Default = false
}):OnChanged(function(val)
    TouchTheRoad = val
end)

-- Anti-AFK Toggle (Moved back into Auto Farm Options)
Tabs.Main:AddToggle("AntiAfkToggle", {
    Title = "Anti AFK",
    Default = true
}):OnChanged(function(val)
    -- You could toggle this off if needed
end)

-- üåü Speed Boost Options
Tabs.Main:AddSection("Speed Boost Options")

-- Remove Vehicle Speed Cap Toggle
Tabs.Main:AddToggle("RemoveSpeedCap", {
    Title = "Remove Vehicle Speed Cap",
    Default = false
}):OnChanged(function(val)
    RemoveSpeedCap = val
end)

-- Vehicle Speed Multiplier Slider
Tabs.Main:AddSlider("VehicleSpeedMultiplier", {
    Title = "Vehicle Speed Multiplier",
    Description = "Boost your car's top speed (not for Auto Farm)",
    Default = 1,
    Min = 1,
    Max = 10,
    Rounding = 1,
    Callback = function(val)
        VehicleSpeedMultiplier = val
    end
})

-- Apply Vehicle Speed Cap Removal and Vehicle Speed Multiplier
task.spawn(function()
    while true do
        task.wait(0.2)
        local car = GetCurrentVehicle()
        if car then
            for _, v in pairs(car:GetDescendants()) do
                if v:IsA("VehicleSeat") then
                    pcall(function()
                        if RemoveSpeedCap then
                            v.MaxSpeed = math.huge  -- Remove speed cap
                        end
                        if v:FindFirstChild("MaxSpeed") then
                            v.MaxSpeed.Value = 200 * VehicleSpeedMultiplier -- Adjust the multiplier as needed
                        end
                    end)
                end
            end
        end
    end
end)

-- üåü Auto Repair Vehicle Toggle
Tabs.Main:AddToggle("AutoRepairToggle", {
    Title = "Auto Repair Vehicle",
    Default = false
}):OnChanged(function(val)
    local car = GetCurrentVehicle()
    if car then
        -- Create a loop to constantly check if vehicle is damaged and repair it
        task.spawn(function()
            while true do
                wait(1)  -- Check every second
                if val and car and car:FindFirstChild("Health") then
                    -- Auto-repair vehicle if health drops below a certain threshold
                    if car.Health.Value < car.Health.MaxValue then
                        car.Health.Value = car.Health.MaxValue  -- Repair vehicle to full health
                        print("Vehicle repaired!")
                    end
                end
            end
        end)
    end
end)

-- Credits tab
Tabs.Settings:AddParagraph({ Title = "üåê Credits & Info üåê", Content = "" })
Tabs.Settings:AddParagraph({ Title = "üëë Crown Cheats üëë", Content = "" })
Tabs.Settings:AddParagraph({ Title = "üìù Script : Driving Empire", Content = "" })
Tabs.Settings:AddParagraph({ Title = "By : ashy1828, monstra", Content = "" })
Tabs.Settings:AddParagraph({ Title = "UI : Fluent", Content = "" })
Tabs.Settings:AddParagraph({ Title = "v1.0.2", Content = "" })

-- Save/Load UI
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Crown Cheats",
    Content = "Driving Empire Script Has Loaded Successfully!",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
